{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\tokopedia-assignment\\\\src\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactPaginate from 'react-paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n\nclass Home extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"STUFF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi augue tortor, laoreet et nulla et, venenatis tempor elit. Nam quis nunc sapien. Integer gravida nisi eu erat semper eleifend. Etiam ullamcorper metus non enim congue, et ornare nisi auctor. Nullam at ullamcorper elit. Integer mattis vulputate pellentesque :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Nulla pulvinar diam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Facilisis bibendum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Vestibulum vulputate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Eget erat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Id porttitor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n} // const Home = () => {\n//   const [error, setError] = useState(null);\n//   const [isLoaded, setIsLoaded] = useState(false);\n//   const [pokemonList, setPokemonList] = useState([]);\n//   useEffect(() => {\n//       fetch(\"https://pokeapi.co/api/v2/pokemon?limit=100&offset=200\")\n//           .then(res => res.json())\n//           .then(\n//               (data) => {\n//                   setIsLoaded(true);\n//                   setPokemonList(data.results);\n//               },\n//               (error) => {\n//                   setIsLoaded(true);\n//                   setError(error);\n//               }\n//           )\n//     }, []\n//   )\n//   if (error) {\n//       return <div>Error: {error.message}</div>;\n//   } else if (!isLoaded) {\n//       return <div>Loading...</div>;\n//   } else {\n//       return (\n//           <div>{PaginatedItems(4)}\n//           </div>\n//       );\n//   }\n// }\n\n\nexport default Home;\n\nfunction Items(_ref) {\n  let {\n    currentItems\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentItems && currentItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Item #\", item]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n}\n\n_c = Items;\n\nfunction PaginatedItems(_ref2) {\n  _s();\n\n  let {\n    itemsPerPage\n  } = _ref2;\n  // We start with an empty list of items.\n  const [currentItems, setCurrentItems] = useState(null);\n  const [pageCount, setPageCount] = useState(0); // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n\n  const [itemOffset, setItemOffset] = useState(0);\n  useEffect(() => {\n    // Fetch items from another resources.\n    const endOffset = itemOffset + itemsPerPage;\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n    setCurrentItems(items.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(items.length / itemsPerPage));\n  }, [itemOffset, itemsPerPage]); // Invoke when user click to request another page.\n\n  const handlePageClick = event => {\n    const newOffset = event.selected * itemsPerPage % items.length;\n    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n    setItemOffset(newOffset);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Items, {\n      currentItems: currentItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      breakLabel: \"...\",\n      nextLabel: \"next >\",\n      onPageChange: handlePageClick,\n      pageRangeDisplayed: 5,\n      pageCount: pageCount,\n      previousLabel: \"< previous\",\n      renderOnZeroPageCount: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PaginatedItems, \"HTeX8cSP+G2jiDQZoJcFFLxPhRM=\");\n\n_c2 = PaginatedItems;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Items\");\n$RefreshReg$(_c2, \"PaginatedItems\");","map":{"version":3,"sources":["C:/xampp/htdocs/tokopedia-assignment/src/Home.js"],"names":["React","useState","useEffect","ReactDOM","ReactPaginate","items","Home","Component","render","Items","currentItems","map","item","PaginatedItems","itemsPerPage","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","endOffset","console","log","slice","Math","ceil","length","handlePageClick","event","newOffset","selected"],"mappings":"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","sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactPaginate from 'react-paginate';\n\nconst items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <h2>STUFF</h2>\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. \nMorbi augue tortor, laoreet et nulla et, venenatis tempor elit. \nNam quis nunc sapien. Integer gravida nisi eu erat semper eleifend. \nEtiam ullamcorper metus non enim congue, et ornare nisi auctor. \nNullam at ullamcorper elit. Integer mattis vulputate pellentesque :</p>\n        <ol>\n          <li>Nulla pulvinar diam</li>\n          <li>Facilisis bibendum</li>\n          <li>Vestibulum vulputate</li>\n          <li>Eget erat</li>\n          <li>Id porttitor</li>\n        </ol>\n      </div>\n    );\n  }\n}\n\n// const Home = () => {\n//   const [error, setError] = useState(null);\n//   const [isLoaded, setIsLoaded] = useState(false);\n//   const [pokemonList, setPokemonList] = useState([]);\n//   useEffect(() => {\n//       fetch(\"https://pokeapi.co/api/v2/pokemon?limit=100&offset=200\")\n//           .then(res => res.json())\n//           .then(\n//               (data) => {\n//                   setIsLoaded(true);\n//                   setPokemonList(data.results);\n//               },\n//               (error) => {\n//                   setIsLoaded(true);\n//                   setError(error);\n//               }\n//           )\n//     }, []\n//   )\n\n//   if (error) {\n//       return <div>Error: {error.message}</div>;\n//   } else if (!isLoaded) {\n//       return <div>Loading...</div>;\n//   } else {\n//       return (\n//           <div>{PaginatedItems(4)}\n//           </div>\n//       );\n//   }\n// }\n\nexport default Home;\n\nfunction Items({ currentItems }) {\n  return (\n    <>\n      {currentItems &&\n        currentItems.map((item) => (\n          <div>\n            <h3>Item #{item}</h3>\n          </div>\n        ))}\n    </>\n  );\n}\n\nfunction PaginatedItems({ itemsPerPage }) {\n  // We start with an empty list of items.\n  const [currentItems, setCurrentItems] = useState(null);\n  const [pageCount, setPageCount] = useState(0);\n  // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n  const [itemOffset, setItemOffset] = useState(0);\n\n  useEffect(() => {\n    // Fetch items from another resources.\n    const endOffset = itemOffset + itemsPerPage;\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n    setCurrentItems(items.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(items.length / itemsPerPage));\n  }, [itemOffset, itemsPerPage]);\n\n  // Invoke when user click to request another page.\n  const handlePageClick = (event) => {\n    const newOffset = (event.selected * itemsPerPage) % items.length;\n    console.log(\n      `User requested page number ${event.selected}, which is offset ${newOffset}`\n    );\n    setItemOffset(newOffset);\n  };\n\n  return (\n    <>\n      <Items currentItems={currentItems} />\n      <ReactPaginate\n        breakLabel=\"...\"\n        nextLabel=\"next >\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={5}\n        pageCount={pageCount}\n        previousLabel=\"< previous\"\n        renderOnZeroPageCount={null}\n      />\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}