{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\tokopedia-assignment\\\\src\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [pokemonList, setPokemonList] = useState([]);\n  useEffect(() => {\n    fetch(\"https://pokeapi.co/api/v2/pokemon?limit=100&offset=200\").then(res => res.json()).then(data => {\n      setIsLoaded(true);\n      setPokemonList(data.results);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 14\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 14\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"ml-5\",\n        children: \"Pokemon List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: user.name\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this);\n  }\n};\n\n_s(Home, \"ldQaj7pc4nGsG2kbuBbfWDQhqkM=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/xampp/htdocs/tokopedia-assignment/src/Home.js"],"names":["React","useState","useEffect","Home","error","setError","isLoaded","setIsLoaded","pokemonList","setPokemonList","fetch","then","res","json","data","results","message","users","map","user","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA4C,OAA5C;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACI,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,CAAC,wDAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,IAAD,IAAU;AACNP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,cAAc,CAACK,IAAI,CAACC,OAAN,CAAd;AACH,KANT,EAOSX,KAAD,IAAW;AACPG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAVT;AAYD,GAbM,EAaJ,EAbI,CAAT;;AAeF,MAAIA,KAAJ,EAAW;AACP,wBAAO;AAAA,4BAAaA,KAAK,CAACY,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO,IAAI,CAACV,QAAL,EAAe;AAClB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFM,MAEA;AACH,wBACI;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBACGW,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACb;AAAA,oBACKA,IAAI,CAACC;AADV,WAASD,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;AACF,CArCD;;GAAMlB,I;;KAAAA,I;AAsCN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect }  from 'react';\n\nconst Home = () => {\nconst [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [pokemonList, setPokemonList] = useState([]);\n    useEffect(() => {\n        fetch(\"https://pokeapi.co/api/v2/pokemon?limit=100&offset=200\")\n            .then(res => res.json())\n            .then(\n                (data) => {\n                    setIsLoaded(true);\n                    setPokemonList(data.results);\n                },\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n      }, [])\n\n  if (error) {\n      return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n      return <div>Loading...</div>;\n  } else {\n      return (\n          <div>\n            <h1 className=\"ml-5\">Pokemon List</h1>\n            <ul>\n              {users.map(user => (\n                <li key={user.id}>\n                    {user.name} \n                </li>\n              ))}\n            </ul>\n          </div>\n      );\n  }\n}\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}